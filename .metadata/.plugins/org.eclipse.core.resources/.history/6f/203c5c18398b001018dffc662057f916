
import inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator;
import inet.node.ethernet.Eth100M;
import inet.node.inet.SensorNode;
import inet.node.inet.*;
import inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium;
import inet.visualizer.common.IntegratedVisualizer;

module MySensorNode extends SensorNode
{
    parameters:
        energyStorage.typename = "SimpleEpEnergyStorage";
        hasStatus = true;


}

network NetworkA
{
    @display("bgb=191.2,43.2");
    submodules:
        configurator: Ipv4NetworkConfigurator {
            @display("p=3.4662657,4.033473");
        }
        visualizer: IntegratedVisualizer {
            @display("p=3.4662657,9.264383");
        }
        ciccio: ApskScalarRadioMedium {
            @display("p=3.4032426,14.0541315");
        }
        sensor4: MySensorNode {
            @display("p=22,6.5;i=misc/sensor2");
        }
        sensor1: MySensorNode {
            @display("p=16.482326,20.196255;i=misc/sensor2");
        }
        sensor2: MySensorNode {
            @display("p=33.772572,16.275303;i=misc/sensor2");
        }
        sensor3: MySensorNode {
            @display("p=35,6.5;i=misc/sensor2");
        }
        gateway: MySensorNode {
            @display("p=28.5,13;i=misc/sensorgateway");
        }
        server: StandardHost {
            @display("p=51.4,20");
        }

        maliciousNode: WirelessHost {

            @display("p=26.1,25.5");
        }
    connections:
        gateway.ethg++ <--> Eth100M <--> server.ethg++;
}
